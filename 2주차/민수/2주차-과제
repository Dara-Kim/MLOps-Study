# 01.18 - MLOps tool 조사

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/16c68478-ae86-4317-a7a3-463b6710af3f/1ad8aa78-75db-4963-a8e4-725bb0d011ad/Untitled.png)

# 젠킨스(Jenkins)

오픈 소스 지속적 통합(CI) 및 지속적 배포(CD) 도구로, 소프트웨어 개발 프로세스의 빌드, 테스트, 배포 등을 자동화하고 관리할 수 있다.

(다양한 플러그인과 함께 여러 프로그래밍 언어와 프레임워크를 지원한다.)

## **마스터-슬레이브 아키텍처**

- **마스터 노드** : 작업 관리, 스케줄링, 플러그인 관리 등을 담당
- **슬레이브 노드** : 실제 빌드 및 테스트 작업을 수행

하나의 마스터, 여러 슬레이브 구조 형태 → 다양한 환경에서 동시 빌드와 테스트가 수행 가능. 부하 분산 및 확장성을 제공

**Jenkinsfile(파이프라인 스크립트)**

Groovy 언어로 작성된 스크립트 파일, 소스코드와 함께 버전관리 시스템에 저장

## 핵심은 파이프라인이다.

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/16c68478-ae86-4317-a7a3-463b6710af3f/a960b923-0e8f-4537-9862-a406079748ce/Untitled.png)

Jenkinsfile은 각 단계를 순차적으로 실행하거나 병렬로 실행하는 등의 로직을 정의하며 빌드, 테스트, 배포 등의 작업을 구성하고 있다.

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/16c68478-ae86-4317-a7a3-463b6710af3f/f7946e1a-2129-4ce3-834a-9e4e540a4f43/Untitled.png)

## 젠킨스에서의 기능

> **Jenkinsfile(파이프라인 스크립트)**
> 

> SCM 트리거 및 웹훅
> 

젠킨스는 소스 코드 관리(SCM) 시스템과 통합하여 변경 사항이 발생할 때마다 자동으로 빌드 및 테스트를 실행할 수 있다.

이를 위해 웹훅이나 폴링 방식을 사용하여 SCM 시스템에서 변경 사항을 감지하고 해당 작업을 트리거한다.

> 결과 및 로그 저장
> 

젠킨스는 빌드 및 테스트 작업이 완료되면 해당 결과와 로그를 저장한다.

이를 통해 빌드 실패 원인을 찾거나 테스트 결과를 검토할 수 있다.

> 알람
> 

젠킨스는 다양한 알림 방법을 제공하여 빌드 및 테스트 결과를 개발자들에게 전달한다.

이메일, 슬랙 등 다양한 채널을 통해 알림을 받거나 플러그인을 통해 추가적인 알림 방식을 확장할 수 있다

> 로그 및 메트릭 수집 및 분석
> 

젠킨스는 빌드, 테스트 및 배포 과정에서 발생하는 로그와 메트릭을 수집하고 분석하고 이를 통해 성능 문제, 장애, 최적화 포인트 등을 식별할 수 있다.

[https://velog.io/@kakdark/젠킨스](https://velog.io/@kakdark/%EC%A0%A0%ED%82%A8%EC%8A%A4)

# 동작원리

1. 개발자가 변경사항코드를 SCM시스템에 푸시
2. 웹훅이나 폴링 방식으로 변경 사항을 감지하고 enkinsfile에 정의된 파이프라인을 실행
3. 마스터 → 스레이브 노드로 작업 할당 → 슬레이브 노드에서 빌드 → 테스트 및 배포
4. 파이프라인의 각 단계에서 필요한 경우 플러그인을 사용 → 다양 도구 통합하여 작업 수행
5. 작업이 완료되면 젠킨스는 결과와 로그를 저장하고 개발자에게 알림을 전송

# 쓰는 이유

- 지속적 통합 및 배포 가능
- 다양한 플러그인 지원
- 확장성 및 분산 처리
    - 마스터-슬레이브 아키텍처를 통해 분산 처리를 지원하기 때문에 여러 빌드 및 테스트 작업을 동시에 수행할 수 있으며, 확장성이 높아진다.
- 다양한 운영체제에서 사용 가능
- Jenkinsfile
    - 소스코드와 함께 파이프라인 버전을 관리할 수 있다.
- 오픈소스이기 때문에 무료이다.
- 원하는 방식대로 CI/CD 파이프라인을 구성 가능
- 모니터링 및 알림 기능

# 사용 전략

- 젠킨스를 클라우드 환경에서 실행하면, 하드웨어 및 인프라 관리에 들어가는 시간과 비용을 절약할 수 있다.
- 젠킨스 마스터 및 슬레이브 노드를 적절한 규모로 구성하고 리소스를 효율적으로 사용하도록 최적화 한다.
- 필요에 따라 동적으로 슬레이브 노드를 생성하고 제거하는 **클라우드 에이전트** 기능을 사용하면 좋다.
- 파이프라인 스크립트는 재사용 가능하고 모듈화된 구조로 작성한다.
- 플러그인을 사용할 때는 호환성에 주의한다.
- 젠킨스에서 보안 설정을 철저히 관리한다.

간단 튜토리얼 → https://kwang1.tistory.com/23
